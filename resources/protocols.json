{
  "domains": [
    {
      "domain": "DOM",
      "description": "This domain exposes DOM read/write operations. Each DOM Node is represented with its mirror object that has an `id`. This `id` can be used to get additional information on the Node, and more. It is important that client receives DOM events only for the nodes that are known to the client. Backend keeps track of the nodes that were sent to the client and never sends the same node twice. It is client's responsibility to collect information about the nodes that were sent to the client.",
      "commands": [
        {
          "name": "click",
          "description": "Try sending a click to the node without actually clicking. Only works for `button` nodes.\n\nFirst it tries to cast the node to `CCMenuItem` and clicks it. If it isn't then it will send a `DispatchEvent(\"puppeteer/nodeClicked\")` event to the game so nodes implmenting that can handle as it needs.\n\nIf you want real click events then you can use [Input.`dispatchMouseEvent`](#inputdispatchmouseevent) instead.",
          "params": [
            {
              "id": "nodeId",
              "description": "The node id. Must be a button node",
              "$ref": "NodeID"
            }
          ]
        },
        {
          "name": "describeNode",
          "description": "Describes node given its id, does not require domain to be enabled. Does not start tracking any objects, can be used for automation.",
          "params": [
            {
              "id": "nodeId",
              "description": "Id of the node to retrieve attributes for.",
              "$ref": "NodeID"
            },
            {
              "id": "depth",
              "description": "The maximum depth at which children should be retrieved, defaults to 1. Use -1 for the entire subtree or provide an integer larger than 0.",
              "type": "Node"
            }
          ],
          "returnValue": [
            {
              "id": "node",
              "description": "Node description.",
              "$ref": "Node"
            }
          ]
        },
        {
          "name": "disable",
          "description": "Disables DOM agent."
        },
        {
          "name": "enable",
          "description": "Enables DOM agent."
        }
      ]
    },
    {
      "domain": "Mods",
      "description": "Manages a mod.",
      "commands": [
        {
          "name": "disableMod",
          "description": "Disables a specific mod.  \nIt won't actually be disabled until you [restart](#game-domain) the game.",
          "params": [
            {
              "id": "mod",
              "description": "The mod id",
              "type": "string"
            }
          ]
        },
        {
          "name": "enableMod",
          "description": "Enables a specific mod.  \nIt won't actually be rnabled until you [restart](#game-domain) the game.",
          "params": [
            {
              "id": "mod",
              "description": "The mod id",
              "type": "string"
            }
          ]
        },
        {
          "name": "getSettingsItems",
          "description": "Get non-custom(?) settings values",
          "params": [
            {
              "id": "mod",
              "description": "The mod id",
              "type": "string"
            },
            {
              "id": "keys",
              "description": "Limits return values to these keys",
              "type": "array",
              "items": [
                {"type":"string"}
              ]
            }
          ],
          "returnValue": [
            {
              "id": "data",
              "type": "object"
            }
          ]
        },
        {
          "name": "setSettings",
          "description": "Set non-custom(?) settings values",
          "params": [
            {
              "id": "mod",
              "description": "The mod id",
              "type": "string"
            },
            {
              "id": "settings",
              "type": "object"
            }
          ]
        }
      ]
    }
  ]
}
